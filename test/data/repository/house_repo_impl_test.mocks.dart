// Mocks generated by Mockito 5.4.0 from annotations
// in search_and_stay/test/data/repository/house_repo_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:search_and_stay/data/datasource/house_datasource.dart' as _i4;
import 'package:search_and_stay/data/models/house_model.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHouseModel_1 extends _i1.SmartFake implements _i3.HouseModel {
  _FakeHouseModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HouseRemoteDatasourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockHouseRemoteDatasourceImpl extends _i1.Mock
    implements _i4.HouseRemoteDatasourceImpl {
  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  _i5.Future<List<_i3.HouseModel>> getHouses() => (super.noSuchMethod(
        Invocation.method(
          #getHouses,
          [],
        ),
        returnValue: _i5.Future<List<_i3.HouseModel>>.value(<_i3.HouseModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.HouseModel>>.value(<_i3.HouseModel>[]),
      ) as _i5.Future<List<_i3.HouseModel>>);
  @override
  _i5.Future<_i3.HouseModel> getDetail(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getDetail,
          [id],
        ),
        returnValue: _i5.Future<_i3.HouseModel>.value(_FakeHouseModel_1(
          this,
          Invocation.method(
            #getDetail,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.HouseModel>.value(_FakeHouseModel_1(
          this,
          Invocation.method(
            #getDetail,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.HouseModel>);
  @override
  _i5.Future<_i3.HouseModel> createHouse(Map<String, dynamic>? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #createHouse,
          [json],
        ),
        returnValue: _i5.Future<_i3.HouseModel>.value(_FakeHouseModel_1(
          this,
          Invocation.method(
            #createHouse,
            [json],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.HouseModel>.value(_FakeHouseModel_1(
          this,
          Invocation.method(
            #createHouse,
            [json],
          ),
        )),
      ) as _i5.Future<_i3.HouseModel>);
  @override
  _i5.Future<_i3.HouseModel> updateHouse(
    String? id,
    Map<String, dynamic>? json,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateHouse,
          [
            id,
            json,
          ],
        ),
        returnValue: _i5.Future<_i3.HouseModel>.value(_FakeHouseModel_1(
          this,
          Invocation.method(
            #updateHouse,
            [
              id,
              json,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.HouseModel>.value(_FakeHouseModel_1(
          this,
          Invocation.method(
            #updateHouse,
            [
              id,
              json,
            ],
          ),
        )),
      ) as _i5.Future<_i3.HouseModel>);
  @override
  _i5.Future<bool> deleteHouse(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteHouse,
          [id],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
