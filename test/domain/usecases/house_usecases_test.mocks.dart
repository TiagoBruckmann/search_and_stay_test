// Mocks generated by Mockito 5.4.0 from annotations
// in search_and_stay/test/domain/usecases/house_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:search_and_stay/data/datasource/house_datasource.dart' as _i2;
import 'package:search_and_stay/data/models/house_model.dart' as _i7;
import 'package:search_and_stay/data/repositories/house_repo_impl.dart' as _i4;
import 'package:search_and_stay/domain/failure/failure.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHouseRemoteDatasource_0 extends _i1.SmartFake
    implements _i2.HouseRemoteDatasource {
  _FakeHouseRemoteDatasource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HouseRepoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockHouseRepoImpl extends _i1.Mock implements _i4.HouseRepoImpl {
  @override
  _i2.HouseRemoteDatasource get houseRemoteDatasource => (super.noSuchMethod(
        Invocation.getter(#houseRemoteDatasource),
        returnValue: _FakeHouseRemoteDatasource_0(
          this,
          Invocation.getter(#houseRemoteDatasource),
        ),
        returnValueForMissingStub: _FakeHouseRemoteDatasource_0(
          this,
          Invocation.getter(#houseRemoteDatasource),
        ),
      ) as _i2.HouseRemoteDatasource);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.HouseModel>>> getHouses() =>
      (super.noSuchMethod(
        Invocation.method(
          #getHouses,
          [],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.HouseModel>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.HouseModel>>(
          this,
          Invocation.method(
            #getHouses,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.HouseModel>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.HouseModel>>(
          this,
          Invocation.method(
            #getHouses,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.HouseModel>>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>> getDetail(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetail,
          [id],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>>.value(
            _FakeEither_1<_i6.Failure, _i7.HouseModel>(
          this,
          Invocation.method(
            #getDetail,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>>.value(
                _FakeEither_1<_i6.Failure, _i7.HouseModel>(
          this,
          Invocation.method(
            #getDetail,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>> createHouse(
          Map<String, dynamic>? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #createHouse,
          [json],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>>.value(
            _FakeEither_1<_i6.Failure, _i7.HouseModel>(
          this,
          Invocation.method(
            #createHouse,
            [json],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>>.value(
                _FakeEither_1<_i6.Failure, _i7.HouseModel>(
          this,
          Invocation.method(
            #createHouse,
            [json],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>> updateHouse(
    String? id,
    Map<String, dynamic>? json,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateHouse,
          [
            id,
            json,
          ],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>>.value(
            _FakeEither_1<_i6.Failure, _i7.HouseModel>(
          this,
          Invocation.method(
            #updateHouse,
            [
              id,
              json,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>>.value(
                _FakeEither_1<_i6.Failure, _i7.HouseModel>(
          this,
          Invocation.method(
            #updateHouse,
            [
              id,
              json,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.HouseModel>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> deleteHouse(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteHouse,
          [id],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteHouse,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteHouse,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
}
